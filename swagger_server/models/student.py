# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Student(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, nombre: str=None, apellido: str=None, identificacion: str=None, edad: int=None):  # noqa: E501
        """Student - a model defined in Swagger

        :param nombre: The nombre of this Student.  # noqa: E501
        :type nombre: str
        :param apellido: The apellido of this Student.  # noqa: E501
        :type apellido: str
        :param identificacion: The identificacion of this Student.  # noqa: E501
        :type identificacion: str
        :param edad: The edad of this Student.  # noqa: E501
        :type edad: int
        """
        self.swagger_types = {
            'nombre': str,
            'apellido': str,
            'identificacion': str,
            'edad': int
        }

        self.attribute_map = {
            'nombre': 'nombre',
            'apellido': 'apellido',
            'identificacion': 'identificacion',
            'edad': 'edad'
        }
        self._nombre = nombre
        self._apellido = apellido
        self._identificacion = identificacion
        self._edad = edad

    @classmethod
    def from_dict(cls, dikt) -> 'Student':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Student of this Student.  # noqa: E501
        :rtype: Student
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nombre(self) -> str:
        """Gets the nombre of this Student.


        :return: The nombre of this Student.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this Student.


        :param nombre: The nombre of this Student.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def apellido(self) -> str:
        """Gets the apellido of this Student.


        :return: The apellido of this Student.
        :rtype: str
        """
        return self._apellido

    @apellido.setter
    def apellido(self, apellido: str):
        """Sets the apellido of this Student.


        :param apellido: The apellido of this Student.
        :type apellido: str
        """

        self._apellido = apellido

    @property
    def identificacion(self) -> str:
        """Gets the identificacion of this Student.


        :return: The identificacion of this Student.
        :rtype: str
        """
        return self._identificacion

    @identificacion.setter
    def identificacion(self, identificacion: str):
        """Sets the identificacion of this Student.


        :param identificacion: The identificacion of this Student.
        :type identificacion: str
        """

        self._identificacion = identificacion

    @property
    def edad(self) -> int:
        """Gets the edad of this Student.


        :return: The edad of this Student.
        :rtype: int
        """
        return self._edad

    @edad.setter
    def edad(self, edad: int):
        """Sets the edad of this Student.


        :param edad: The edad of this Student.
        :type edad: int
        """

        self._edad = edad
